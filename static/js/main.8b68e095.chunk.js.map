{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/InputField/InputField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputField","name","value","error","onChange","onBlur","htmlFor","type","id","placeholder","classNames","autoComplete","regExp","NewMovie","state","errors","handleChange","event","target","setState","handleSubmit","preventDefault","onAdd","props","validateText","trim","validateUrl","match","this","onSubmit","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b68e095.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './InputField.css';\n\nexport const InputField = ({\n  name,\n  value,\n  error,\n  onChange,\n  onBlur,\n}) => {\n  return (\n    <div className=\"input-wrapper\">\n      <label\n        htmlFor={name}\n        className=\"text-capitalize font-weight-bold\"\n      >\n        {name}\n      </label>\n\n      <input\n        type=\"text\"\n        name={name}\n        id={name}\n        placeholder={name}\n        className={classNames('form-control input', {\n          'is-danger': error,\n        })}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        autoComplete=\"off\"\n      />\n\n      {error\n      && <p className=\"text-danger\">{`Please, add ${name}`}</p>\n      }\n    </div>\n  );\n};\n\nInputField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  error: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n};\n\nInputField.defaultProps = {\n  error: false,\n  onBlur: () => {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { InputField } from '../InputField';\n\n// eslint-disable-next-line max-len\nconst regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(state => ({\n      [name]: value,\n      errors: {\n        ...state.errors,\n        [name]: false,\n      },\n    }));\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { errors } = this.state;\n\n    if (errors.title || errors.imgUrl || errors.imdbUrl || errors.imdbId) {\n      return;\n    }\n\n    const { onAdd } = this.props;\n\n    const movie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    onAdd(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  validateText = (event) => {\n    const { name } = event.target;\n\n    if (this.state[name].trim()) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: false,\n        },\n      }));\n    } else {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: true,\n        },\n      }));\n    }\n  }\n\n  validateUrl = (event) => {\n    const { name } = event.target;\n\n    if (this.state[name].match(regExp)) {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: false,\n        },\n      }));\n    } else {\n      this.setState(state => ({\n        errors: {\n          ...state.errors,\n          [name]: true,\n        },\n      }));\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    const {\n      handleChange,\n      handleSubmit,\n      validateText,\n      validateUrl,\n    } = this;\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <h2 className=\"h5\">Add movie</h2>\n\n        <InputField\n          name=\"title\"\n          value={title}\n          error={errors.title}\n          onChange={handleChange}\n          onBlur={validateText}\n        />\n\n        <InputField\n          name=\"description\"\n          value={description}\n          onChange={handleChange}\n        />\n\n        <InputField\n          name=\"imgUrl\"\n          value={imgUrl}\n          error={errors.imgUrl}\n          onChange={handleChange}\n          onBlur={validateUrl}\n        />\n\n        <InputField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          error={errors.imdbUrl}\n          onChange={handleChange}\n          onBlur={validateUrl}\n        />\n\n        <InputField\n          name=\"imdbId\"\n          value={imdbId}\n          error={errors.imdbId}\n          onChange={handleChange}\n          onBlur={validateText}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-info mt-4\"\n          disabled={!title || !imgUrl || !imdbUrl || !imdbId}\n        >\n          Add New Movie\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}